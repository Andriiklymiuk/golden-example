{
  "info": {
    "name": "Recipes API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "apiKey",
      "value": "default-api-key-123",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "test-user-123",
      "type": "string"
    },
    {
      "key": "recipeId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "List Recipes",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{apiKey}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/recipes",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "recipes"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status code is 200', function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response is an array', function() {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('array');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Search Recipes",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{apiKey}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/recipes?q=pasta",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "recipes"
          ],
          "query": [
            {
              "key": "q",
              "value": "pasta"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status code is 200', function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response is an array', function() {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('array');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get User's Recipes",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{apiKey}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/recipes?userId=test-user-123",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "recipes"
          ],
          "query": [
            {
              "key": "userId",
              "value": "test-user-123"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status code is 200', function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response is an array', function() {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('array');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Create Recipe",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{apiKey}}",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/recipes",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "recipes"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n    \"userId\": \"test-user-123\",\n    \"title\": \"Spaghetti Carbonara\",\n    \"ingredients\": [\"spaghetti\", \"eggs\", \"pecorino cheese\", \"guanciale\", \"black pepper\"],\n    \"instructions\": \"1. Cook pasta\\n2. Prepare sauce\\n3. Mix and serve\"\n}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status code is 201', function() {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test('Response has correct recipe data', function() {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.have.property('id');",
              "    pm.collectionVariables.set('recipeId', response.id);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get Recipe",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{apiKey}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/recipes/{{recipeId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "recipes",
            "{{recipeId}}"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status code is 200', function() {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Update Recipe",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{apiKey}}",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/recipes/{{recipeId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "recipes",
            "{{recipeId}}"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n    \"userId\": \"test-user-123\",\n    \"title\": \"Updated Carbonara\",\n    \"ingredients\": [\"spaghetti\", \"eggs\", \"pecorino cheese\", \"pancetta\", \"black pepper\"],\n    \"instructions\": \"1. Cook pasta al dente\\n2. Prepare sauce\\n3. Combine and serve immediately\"\n}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status code is 200', function() {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Delete Recipe",
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{apiKey}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/recipes/{{recipeId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "recipes",
            "{{recipeId}}"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status code is 200', function() {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ]
    }
  ]
}